from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import json
import random
import os


EPOCHS = {
    "ancient": "–î—Ä–µ–≤–Ω—è—è –†—É—Å—å (IX‚ÄìXIII –≤–≤.)",
    "mongol": "–ú–æ–Ω–≥–æ–ª–æ-—Ç–∞—Ç–∞—Ä—Å–∫–æ–µ –∏–≥–æ (XIII‚ÄìXV –≤–≤.)",
    "moscow": "–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —Ü–∞—Ä—Å—Ç–≤–æ (XV‚ÄìXVI –≤–≤.)",
    "romanov": "–î–∏–Ω–∞—Å—Ç–∏—è –†–æ–º–∞–Ω–æ–≤—ã—Ö (1613‚Äì1917)",
    "revolution": "–†–µ–≤–æ–ª—é—Ü–∏–∏ –∏ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –≤–æ–π–Ω–∞ (1917‚Äì1922)",
    "ussr": "–°–æ–≤–µ—Ç—Å–∫–∏–π –°–æ—é–∑ (1922‚Äì1991)",
    "ww2": "–í–µ–ª–∏–∫–∞—è –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≤–æ–π–Ω–∞ (1941‚Äì1945)",
    "perestroika": "–ü–µ—Ä–µ—Å—Ç—Ä–æ–π–∫–∞ –∏ —Ä–∞—Å–ø–∞–¥ –°–°–°–† (1985‚Äì1991)",
    "modern": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –†–æ—Å—Å–∏—è (1991‚Äì–Ω–∞—Å—Ç. –≤—Ä–µ–º—è)"
}

FACTS_DIR = "facts"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ \n\n–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–ø–æ—Ö.\n\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö –∏ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–≤—à—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ê–≤—Ç–æ—Ä—ã –±–æ—Ç–∞ –Ω–µ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = "–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ø–æ—Ö–∏:\n"
    for key, name in EPOCHS.items():
        message += f"/fact {key} ‚Äî {name}\n"
    await update.message.reply_text(message)

async def fact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —ç–ø–æ—Ö—É. –ü—Ä–∏–º–µ—Ä: /fact romanov")
        return

    epoch = context.args[0].lower()
    if epoch not in EPOCHS:
        await update.message.reply_text("–¢–∞–∫–æ–π —ç–ø–æ—Ö–∏ –Ω–µ—Ç. –ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ.")
        return

    file_path = os.path.join(FACTS_DIR, f"{epoch}.json")
    try:
        with open(file_path, encoding="utf-8") as file:
            facts = json.load(file)
        fact = random.choice(facts)
        #print(facts)
        await update.message.reply_text(f"üß† {fact['title']}\n\n{fact['text']}\n\n–ò—Å—Ç–æ—á–Ω–∏–∫: {fact.get('source', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
    except Exception as e:
        await update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–æ–≤.")

def main():
    application = ApplicationBuilder().token("7782322579:AAGVklzYac2RJEHl1kripSbH9PHhv2rChLs").build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("fact", fact))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    application.run_polling()

if __name__ == "__main__":
    main()
